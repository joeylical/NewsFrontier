# NewsFrontier Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =====================================
# Database & Core Services
# =====================================

# PostgreSQL connection details
DATABASE_URL=postgresql://newsfrontier:dev_password@localhost:5432/newsfrontier_db
DB_PASSWORD=dev_password

S3API_REGION=s3-region
S3API_ENDPOINT=s3-endpoint
S3API_BUCKET=s3-bucket
S3API_KEY_ID=s3-key-id
S3API_KEY=s3-key

# Redis connection (optional for caching)
# REDIS_URL=redis://localhost:6379

# =====================================
# Security & Authentication
# =====================================

# JWT secret key (use a strong random string in production)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT token expiration time in hours
JWT_EXPIRE_HOURS=24

# Bcrypt salt rounds for password hashing
PASSWORD_SALT_ROUNDS=12

# =====================================
# AI/ML Services
# =====================================

# Primary LLM service configuration
LLM_API_URL=https://generativelanguage.googleapis.com/v1beta/openai/
LLM_API_KEY=your-api-key-here
GOOGLE_API_KEY=your-api-key-here

# LLM model configurations
# Summary model for article summaries (fast, efficient)
LLM_MODEL_SUMMARY=gemini-2.0-flash-lite
# Analysis model for cluster detection and daily summaries (more capable)
LLM_MODEL_ANALYSIS=gemini-2.5-pro

# Vector embedding service
EMBEDDING_API_URL=https://api.openai.com/v1
EMBEDDING_MODEL=gemini-embedding-001
EMBEDDING_DIMENSION=768

IMAGEGEN_MODEL=imagen-3.0-generate-002
IMAGEGEN_ASPECT_RATIO=16:9
IMAGEGEN_PERSON_GENERATE=dont_allow

# Optional AI services
# TRANSCRIPT_API_URL=https://api.openai.com/v1
# TTS_API_URL=https://api.openai.com/v1
# TTS_API_KEY=your-tts-api-key-here

# =====================================
# Application Settings
# =====================================

# Logging and environment
LOG_LEVEL=INFO
ENVIRONMENT=development
DEBUG=true

# Processing configuration
MAX_PROCESSING_ATTEMPTS=3
DEFAULT_RSS_INTERVAL=60
SCRAPER_CONCURRENT_FEEDS=5
POSTPROCESS_BATCH_SIZE=10

# API configuration
API_RATE_LIMIT=100
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# =====================================
# Development Settings
# =====================================

# Next.js frontend configuration
NEXT_PUBLIC_API_URL=http://localhost:8000

# =====================================
# Service Communication
# =====================================

# Backend service URL for scraper and postprocess
BACKEND_URL=http://localhost:8000

# PostProcess service internal API URL for backend
POSTPROCESS_API_URL=http://localhost:8001
